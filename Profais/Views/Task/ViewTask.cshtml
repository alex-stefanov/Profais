@using Profais.Services.ViewModels.Task;
@using Profais.Services.ViewModels.Material;
@using Profais.Services.ViewModels.Worker
@model TaskViewModel

@{
    ViewData["Title"] = "Task - Details";
}

<div class="container mt-4">
    <div class="card">
        <div class="card-header">
            <h2>
                @ViewData["Title"]
            </h2>
        </div>
        <div class="card-body">
            <div class="row mb-3">
                <div class="col-md-6">
                    <strong>
                        Title:
                    </strong> 
                    <span>
                        @Model.Title
                    </span>
                </div>
                <div class="col-md-6">
                    <strong>
                        Description:
                    </strong> 
                    <span>
                        @Model.Description
                    </span>
                </div>
            </div>
            <div class="row mb-3">
                <div class="col-md-6">
                    <strong>
                        Hours Worked:
                    </strong>
                    <span>
                        @Model.HoursWorked
                    </span>
                </div>
                <div class="col-md-6">
                    <strong>
                        Status:
                     </strong>
                    <span>
                        @if (Model.IsCompleted)

                        {
                            <span class="badge bg-success">
                                Completed
                            </span>
                        }
                        else

                        {
                            <span class="badge bg-warning">
                                In Progress
                            </span>
                        }
                    </span>
                </div>
            </div>

            <h5>
                Materials
            </h5>
            <ul class="list-group mb-3">
                @foreach (MaterialViewModel material in Model.Materials)
                {
                    <li class="list-group-item">
                        @material.Name (Used for: @material.UsedFor)
                    </li>
                }
            </ul>

            <h5>Assigned Workers</h5>
            <ul class="list-group mb-3">
                @foreach (UserViewModel user in Model.Users)
                {
                    <li class="list-group-item">
                        @user.UserFirstName @user.UserLastName
                    </li>
                }
            </ul>

            @if (!Model.IsCompleted)
            {
                <div class="mt-4">
                    <form asp-action="AddWorkers" asp-controller="Worker" asp-route-taskId="@Model.Id" method="get">
                        <button type="submit" class="btn btn-primary">
                            Add Workers
                        </button>
                    </form>

                    <form asp-action="AddMaterialsToTask" asp-controller="Material" asp-route-taskId="@Model.Id" method="get" class="mt-2">
                        <button type="submit" class="btn btn-secondary">
                            Add Materials
                        </button>
                    </form>

                    <form asp-action="CompleteTask" asp-route-taskId="@Model.Id" method="post" class="mt-2">
                        <button type="submit" class="btn btn-success">
                            Complete Task
                        </button>
                    </form>

                    <form asp-action="DeleteTask" asp-route-taskId="@Model.Id" method="post" class="mt-2">
                        <button type="submit" class="btn btn-warning">
                            Delete Task
                        </button>
                    </form>
                </div>
            }
        </div>
    </div>
</div>
