@using Profais.Services.ViewModels.Task;
@using Profais.Services.ViewModels.Shared;
@model PagedResult<TaskViewModel>

@{
    ViewData["Title"] = "Task - Paged Tasks";

    Model.PaginationViewModel.Area = "";
    Model.PaginationViewModel.Controller = "Task";
    Model.PaginationViewModel.Action = "ViewTasks";
    Model.PaginationViewModel.RouteParams.Add("projectId", Model.AdditionalProperty!);
}

<div class="container mt-4">
    @if (Model.Items.Any())
    {
        <h2>
            @($"Tasks for Project {Model.Items.FirstOrDefault()!.ProjectId}")
        </h2>

        <div class="row">
            @foreach (TaskViewModel task in Model.Items)
            {
                <div class="col-md-6 mb-4">
                    <div class="card">
                        <div class="card-header">
                            <h4 class="card-title">
                                @task.Title
                            </h4>
                        </div>

                        <div class="card-body">
                            <p>
                                <strong>
                                    Status:
                                </strong>

                                <span>
                                    @(task.IsCompleted ? "Completed" : "Not Completed")
                                </span>
                            </p>

                            <form asp-action="ViewTask" asp-controller="Task" method="get">
                                <input value="@task.Id" hidden readonly name="taskId" />

                                <button type="submit" class="btn btn-primary">
                                    View Task
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            }
        </div>

        <partial name="_Pagination" model="Model.PaginationViewModel" />
    }
    else
    {
        <h2>
            No tasks available
        </h2>
    }
</div>
