@using Profais.Services.ViewModels.Task;
@using Profais.Services.ViewModels.Shared;
@model PagedResult<TaskViewModel>

@{
    ViewData["Title"] = "Task - Paged Tasks";
}

<div class="container mt-4">
    @if (Model.Items.Any())
    {
        <h2>
            @($"Tasks for Project {Model.Items.FirstOrDefault()!.ProjectId}")
        </h2>

        <div class="row">
            @foreach (TaskViewModel task in Model.Items)
            {
                <div class="col-md-6 mb-4">
                    <div class="card">
                        <div class="card-header">
                            <h4 class="card-title">
                                @task.Title
                            </h4>
                        </div>

                        <div class="card-body">
                            <p>
                                <strong>
                                    Status:
                                </strong>

                                <span>
                                    @(task.IsCompleted ? "Completed" : "Not Completed")
                                </span>
                            </p>

                            <form asp-action="ViewTask" asp-controller="Task" method="get">
                                <input value="@task.Id" name="taskId" />

                                <button type="submit" class="btn btn-primary">
                                    View Task
                                </button>
                            </form>
                        </div>
                    </div>
                </div>
            }
        </div>

        <nav>
            <ul class="pagination justify-content-center">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="ViewTasks" asp-route-projectId="@Model.Items.FirstOrDefault()!.ProjectId" asp-route-page="@(Model.CurrentPage - 1)">
                            Previous
                        </a>
                    </li>
                }
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-action="ViewTasks" asp-route-projectId="@Model.Items.FirstOrDefault()!.ProjectId" asp-route-page="@i">
                            @i
                        </a>
                    </li>
                }
                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="ViewTasks" asp-route-projectId="@Model.Items.FirstOrDefault()!.ProjectId" asp-route-page="@(Model.CurrentPage + 1)">
                            Next
                        </a>
                    </li>
                }
            </ul>
        </nav>
    }
    else
    {
        <h2>
            No tasks available
        </h2>
    }
</div>
