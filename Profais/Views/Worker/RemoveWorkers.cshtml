@using Profais.Services.ViewModels.Worker
@model WorkerPagedResult

@{
    ViewData["Title"] = "Worker - Remove Workers";
}

<div class="container mt-4">
    <h2>
        @ViewData["Title"]
    </h2>

    <form id="removeWorkersForm" asp-action="RemoveWorkersFromTask" asp-controller="Worker" method="post">
        <input value="@Model.TaskId" hidden name="taskId" />
        <input id="selectedUserIds" value="" hidden name="selectedWorkerIds" />

        <div class="row">
            @foreach (UserViewModel user in Model.Users)
            {
                <div class="col-md-4">
                    <div class="card">
                        <div class="card-body">
                            <h5 class="card-title">
                                @($"{user.UserFirstName} {user.UserLastName} - {user.Role}")
                            </h5>

                            <div class="form-check">
                                <input type="checkbox"
                                       value="@user.Id"
                                       id="worker-@user.Id"
                                       class="form-check-input" />

                                <label for="worker-@user.Id" class="form-check-label">
                                    Select
                                </label>
                            </div>
                        </div>
                    </div>
                </div>
            }
        </div>

        <nav>
            <ul class="pagination justify-content-center">
                @if (Model.HasPreviousPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="RemoveWorkers" asp-controller="Worker" asp-route-taskId="@Model.TaskId" asp-route-pageNumber="@(Model.CurrentPage - 1)" asp-route-pageSize="12">
                            Previous
                        </a>
                    </li>
                }
                @for (int i = 1; i <= Model.TotalPages; i++)
                {
                    <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                        <a class="page-link" asp-action="RemoveWorkers" asp-controller="Worker" asp-route-taskId="@Model.TaskId" asp-route-pageNumber="@i" asp-route-pageSize="12">
                            @i
                        </a>
                    </li>
                }
                @if (Model.HasNextPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-action="RemoveWorkers" asp-controller="Worker" asp-route-taskId="@Model.TaskId" asp-route-pageNumber="@(Model.CurrentPage + 1)" asp-route-pageSize="12">
                            Next
                        </a>
                    </li>
                }
            </ul>
        </nav>

        <button type="submit" class="btn btn-primary mt-3">
            Remove Selected Workers
        </button>
    </form>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            const selectedUserIds = JSON.parse(localStorage.getItem('selectedUserIds')) || [];

            document.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
                if (selectedUserIds.includes(checkbox.value)) {
                    checkbox.checked = true;
                }
            });

            document.querySelectorAll('input[type="checkbox"]').forEach(checkbox => {
                checkbox.addEventListener('change', () => {
                    let selectedIds = JSON.parse(localStorage.getItem('selectedUserIds')) || [];

                    if (checkbox.checked) {
                        if (!selectedIds.includes(checkbox.value)) {
                            selectedIds.push(checkbox.value);
                        }
                    } else {
                        selectedIds = selectedIds.filter(id => id !== checkbox.value);
                    }

                    localStorage.setItem('selectedUserIds', JSON.stringify(selectedIds));
                });
            });
        });

        document.querySelector('#removeWorkersForm').addEventListener('submit', function () {
            const selectedUserIds = JSON.parse(localStorage.getItem('selectedUserIds')) || [];
            document.getElementById('selectedUserIds').value = selectedUserIds.join(',');
            localStorage.removeItem('selectedUserIds');
        });
    </script>
}