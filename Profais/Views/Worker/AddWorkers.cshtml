@using Profais.Services.ViewModels.Worker
@model WorkerPagedResult

@{
    ViewData["Title"] = "Add Workers";
}

<h2>@ViewData["Title"]</h2>

<form method="post" action="AssignWorkersToTask">
    <input type="hidden" name="taskId" value="@Model.TaskId" />
    <input type="hidden" id="selectedUserIds" name="selectedUserIds" value="@string.Join(",", Model.SelectedUserIds)" />

    <div class="row">
        @foreach (var user in Model.Users)
        {
            <div class="col-md-4">
                <div class="card">
                    <div class="card-body">
                        <h5 class="card-title">@user.UserFirstName @user.UserLastName</h5>
                        <div class="form-check">
                            <input class="form-check-input"
                                   type="checkbox"
                                   value="@user.Id"
                                   id="worker-@user.Id"
                            @(Model.SelectedUserIds.Contains(user.Id) ? "checked" : "") />
                            <label class="form-check-label" for="worker-@user.Id">Select</label>
                        </div>
                    </div>
                </div>
            </div>
        }
    </div>

    <nav>
        <ul class="pagination justify-content-center">
            @if (Model.HasPreviousPage)
            {
                <li class="page-item">
                    <a class="page-link"
                       asp-action="AddWorkers"
                       asp-route-taskId="@Model.TaskId"
                       asp-route-pageNumber="@(Model.CurrentPage - 1)"
                       asp-route-selectedUserIds="@string.Join(",", Model.SelectedUserIds)">Previous</a>
                </li>
            }
            @for (int i = 1; i <= Model.TotalPages; i++)
            {
                <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                    <a class="page-link"
                       asp-action="AddWorkers"
                       asp-route-taskId="@Model.TaskId"
                       asp-route-pageNumber="@i"
                       asp-route-selectedUserIds="@string.Join(",", Model.SelectedUserIds)">@i</a>
                </li>
            }
            @if (Model.HasNextPage)
            {
                <li class="page-item">
                    <a class="page-link"
                       asp-action="AddWorkers"
                       asp-route-taskId="@Model.TaskId"
                       asp-route-pageNumber="@(Model.CurrentPage + 1)"
                       asp-route-selectedUserIds="@string.Join(",", Model.SelectedUserIds)">Next</a>
                </li>
            }
        </ul>
    </nav>

    <button type="submit" class="btn btn-primary mt-3">Add Selected Workers</button>
</form>

<script>
    document.addEventListener('DOMContentLoaded', function () {
        const selectedUserIdsField = document.getElementById('selectedUserIds');
        const checkboxes = document.querySelectorAll('input[type="checkbox"]');

        checkboxes.forEach(checkbox => {
            checkbox.addEventListener('change', () => {
                let selectedIds = selectedUserIdsField.value ? selectedUserIdsField.value.split(',') : [];

                if (checkbox.checked) {
                    if (!selectedIds.includes(checkbox.value)) {
                        selectedIds.push(checkbox.value);
                    }
                } else {
                    selectedIds = selectedIds.filter(id => id !== checkbox.value);
                }

                selectedUserIdsField.value = selectedIds.join(',');
            });
        });
    });
</script>
