@using Profais.Services.ViewModels.Shared;
@model PaginationViewModel

<nav>
    <ul class="pagination justify-content-center">
        @if (Model.HasPreviousPage)
        {
            <li class="page-item">
                <a asp-area="@Model.Area" asp-controller="@Model.Controller" asp-action="@Model.Action"
                    asp-route-pageNumber="@(Model.CurrentPage - 1)" asp-route-pageSize="@Model.PageSize" class="page-link">
                    Previous
                </a>
            </li>
        }
        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <li class="page-item @(i == Model.CurrentPage ? "active" : "")">
                <a asp-area="@Model.Area" asp-controller="@Model.Controller" asp-action="@Model.Action"
                    asp-route-pageNumber="@i" asp-route-pageSize="@Model.PageSize" class="page-link">
                    @i
                </a>
            </li>
        }
        @if (Model.HasNextPage)
        {
            <li class="page-item">
                <a asp-area="@Model.Area" asp-controller="@Model.Controller" asp-action="@Model.Action"
                    asp-route-pageNumber="@(Model.CurrentPage + 1)" asp-route-pageSize="@Model.PageSize" class="page-link">
                    Next
                </a>
            </li>
        }
    </ul>
</nav>

@section Scripts{
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            var routeParams = @Html.Raw(Json.Serialize(Model.RouteParams))

            function updatePaginationLinks() {
                var pageLinks = document.querySelectorAll('.page-link');

                pageLinks.forEach(function(link) {
                    for (var key in routeParams) {
                        if (routeParams.hasOwnProperty(key)) {
                            link.setAttribute(`asp-route-${key}`, routeParams[key]);
                        }
                    }
                });
            }

            updatePaginationLinks();
        });
    </script>
}