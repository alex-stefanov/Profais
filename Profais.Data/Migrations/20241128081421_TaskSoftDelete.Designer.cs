// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Profais.Data;

#nullable disable

namespace Profais.Data.Migrations
{
    [DbContext(typeof(ProfaisDbContext))]
    [Migration("20241128081421_TaskSoftDelete")]
    partial class TaskSoftDelete
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole<string>", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("Profais.Data.Models.Material", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("UsedForId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Materials");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Activated Carbon Filter",
                            UsedForId = 0
                        },
                        new
                        {
                            Id = 2,
                            Name = "Sand Filter",
                            UsedForId = 0
                        },
                        new
                        {
                            Id = 3,
                            Name = "UV Sterilizer",
                            UsedForId = 0
                        },
                        new
                        {
                            Id = 4,
                            Name = "Reverse Osmosis Membrane",
                            UsedForId = 0
                        },
                        new
                        {
                            Id = 5,
                            Name = "Pre-Filter Cartridge",
                            UsedForId = 0
                        },
                        new
                        {
                            Id = 6,
                            Name = "Sediment Filter",
                            UsedForId = 0
                        },
                        new
                        {
                            Id = 7,
                            Name = "Chemical Dosing Pump",
                            UsedForId = 0
                        },
                        new
                        {
                            Id = 8,
                            Name = "Drip Irrigation Pipe",
                            UsedForId = 1
                        },
                        new
                        {
                            Id = 9,
                            Name = "Sprinkler Head",
                            UsedForId = 1
                        },
                        new
                        {
                            Id = 10,
                            Name = "Irrigation Valve",
                            UsedForId = 1
                        },
                        new
                        {
                            Id = 11,
                            Name = "PVC Piping",
                            UsedForId = 1
                        },
                        new
                        {
                            Id = 12,
                            Name = "Control Timer",
                            UsedForId = 1
                        },
                        new
                        {
                            Id = 13,
                            Name = "Filter Unit",
                            UsedForId = 1
                        },
                        new
                        {
                            Id = 14,
                            Name = "Fertilizer Injector",
                            UsedForId = 1
                        },
                        new
                        {
                            Id = 15,
                            Name = "Pressure Tank",
                            UsedForId = 2
                        },
                        new
                        {
                            Id = 16,
                            Name = "Pressure Gauge",
                            UsedForId = 2
                        },
                        new
                        {
                            Id = 17,
                            Name = "Water Pump",
                            UsedForId = 2
                        },
                        new
                        {
                            Id = 18,
                            Name = "Expansion Vessel",
                            UsedForId = 2
                        },
                        new
                        {
                            Id = 19,
                            Name = "Non-Return Valve",
                            UsedForId = 2
                        },
                        new
                        {
                            Id = 20,
                            Name = "Pressure Switch",
                            UsedForId = 2
                        },
                        new
                        {
                            Id = 21,
                            Name = "Control Panel",
                            UsedForId = 2
                        },
                        new
                        {
                            Id = 22,
                            Name = "Water Tank",
                            UsedForId = 3
                        },
                        new
                        {
                            Id = 23,
                            Name = "Tank Lid",
                            UsedForId = 3
                        },
                        new
                        {
                            Id = 24,
                            Name = "Overflow Pipe",
                            UsedForId = 3
                        },
                        new
                        {
                            Id = 25,
                            Name = "Level Sensor",
                            UsedForId = 3
                        },
                        new
                        {
                            Id = 26,
                            Name = "Tank Stand",
                            UsedForId = 3
                        },
                        new
                        {
                            Id = 27,
                            Name = "Manhole Cover",
                            UsedForId = 3
                        },
                        new
                        {
                            Id = 28,
                            Name = "Drainage Outlet",
                            UsedForId = 3
                        },
                        new
                        {
                            Id = 29,
                            Name = "HDPE Pipe",
                            UsedForId = 4
                        },
                        new
                        {
                            Id = 30,
                            Name = "Flow Meter",
                            UsedForId = 4
                        },
                        new
                        {
                            Id = 31,
                            Name = "Gate Valve",
                            UsedForId = 4
                        },
                        new
                        {
                            Id = 32,
                            Name = "T-Joint",
                            UsedForId = 4
                        },
                        new
                        {
                            Id = 33,
                            Name = "Compression Fittings",
                            UsedForId = 4
                        },
                        new
                        {
                            Id = 34,
                            Name = "Air Release Valve",
                            UsedForId = 4
                        },
                        new
                        {
                            Id = 35,
                            Name = "PVC Coupling",
                            UsedForId = 4
                        },
                        new
                        {
                            Id = 36,
                            Name = "Perforated Pipe",
                            UsedForId = 5
                        },
                        new
                        {
                            Id = 37,
                            Name = "Catch Basin",
                            UsedForId = 5
                        },
                        new
                        {
                            Id = 38,
                            Name = "Gravel Filter",
                            UsedForId = 5
                        },
                        new
                        {
                            Id = 39,
                            Name = "Drain Mat",
                            UsedForId = 5
                        },
                        new
                        {
                            Id = 40,
                            Name = "Sump Pump",
                            UsedForId = 5
                        },
                        new
                        {
                            Id = 41,
                            Name = "Drainage Grate",
                            UsedForId = 5
                        },
                        new
                        {
                            Id = 42,
                            Name = "Concrete Pipe",
                            UsedForId = 5
                        },
                        new
                        {
                            Id = 43,
                            Name = "Submersible Pump",
                            UsedForId = 6
                        },
                        new
                        {
                            Id = 44,
                            Name = "Pump Motor",
                            UsedForId = 6
                        },
                        new
                        {
                            Id = 45,
                            Name = "Impeller",
                            UsedForId = 6
                        },
                        new
                        {
                            Id = 46,
                            Name = "Pump Housing",
                            UsedForId = 6
                        },
                        new
                        {
                            Id = 47,
                            Name = "Suction Pipe",
                            UsedForId = 6
                        },
                        new
                        {
                            Id = 48,
                            Name = "Pump Shaft",
                            UsedForId = 6
                        },
                        new
                        {
                            Id = 49,
                            Name = "Mechanical Seal",
                            UsedForId = 6
                        },
                        new
                        {
                            Id = 50,
                            Name = "Rubber Gasket",
                            UsedForId = 7
                        },
                        new
                        {
                            Id = 51,
                            Name = "Thread Seal Tape",
                            UsedForId = 7
                        },
                        new
                        {
                            Id = 52,
                            Name = "Clamp",
                            UsedForId = 7
                        },
                        new
                        {
                            Id = 53,
                            Name = "Bracket",
                            UsedForId = 7
                        },
                        new
                        {
                            Id = 54,
                            Name = "Fasteners",
                            UsedForId = 7
                        },
                        new
                        {
                            Id = 55,
                            Name = "Adhesive",
                            UsedForId = 7
                        },
                        new
                        {
                            Id = 56,
                            Name = "Sealant",
                            UsedForId = 7
                        });
                });

            modelBuilder.Entity("Profais.Data.Models.Penalty", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.ToTable("Penalties");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "The person didn't arrive on time.",
                            Title = "Late for work"
                        },
                        new
                        {
                            Id = 2,
                            Description = "The assigned task was not completed on time.",
                            Title = "Missed deadline"
                        },
                        new
                        {
                            Id = 3,
                            Description = "The person exhibited inappropriate behavior at the workplace.",
                            Title = "Unprofessional behavior"
                        },
                        new
                        {
                            Id = 4,
                            Description = "The person was absent without prior approval.",
                            Title = "Unauthorized absence"
                        },
                        new
                        {
                            Id = 5,
                            Description = "The task assigned was not completed as required.",
                            Title = "Incomplete work"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Company property was damaged due to negligence.",
                            Title = "Damage to company property"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Instructions were not adhered to as directed.",
                            Title = "Failure to follow instructions"
                        },
                        new
                        {
                            Id = 8,
                            Description = "The person disregarded workplace safety guidelines.",
                            Title = "Violation of safety protocols"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Resources were used inefficiently or inappropriately.",
                            Title = "Improper use of resources"
                        },
                        new
                        {
                            Id = 10,
                            Description = "The overall performance fell below the acceptable standards.",
                            Title = "Poor performance"
                        });
                });

            modelBuilder.Entity("Profais.Data.Models.ProfProject", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AbsoluteAddress")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int?>("ProfProjectRequestId")
                        .HasColumnType("int");

                    b.Property<string>("Scheme")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("ProfProjectRequestId");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AbsoluteAddress = "Ulitsa Tsarigradsko Shose 125, Sofia, Bulgaria",
                            IsCompleted = true,
                            Scheme = "https://www.handyman.net.au/wp-content/uploads/old_images/g-lawns-lawnirrigation-DIAGRAM.jpg",
                            Title = "Sofia Central Water Supply"
                        },
                        new
                        {
                            Id = 2,
                            AbsoluteAddress = "Ulitsa Ivan Vazov 17, Plovdiv, Bulgaria",
                            IsCompleted = true,
                            Scheme = "https://www.handyman.net.au/wp-content/uploads/old_images/g-lawns-lawnirrigation-DIAGRAM.jpg",
                            Title = "Plovdiv Irrigation Upgrade"
                        },
                        new
                        {
                            Id = 3,
                            AbsoluteAddress = "Ulitsa Levski 55, Varna, Bulgaria",
                            IsCompleted = true,
                            Scheme = "https://www.handyman.net.au/wp-content/uploads/old_images/g-lawns-lawnirrigation-DIAGRAM.jpg",
                            Title = "Varna Wastewater Management"
                        },
                        new
                        {
                            Id = 4,
                            AbsoluteAddress = "Ulitsa Aleksandrovska 10, Burgas, Bulgaria",
                            IsCompleted = true,
                            Scheme = "https://www.handyman.net.au/wp-content/uploads/old_images/g-lawns-lawnirrigation-DIAGRAM.jpg",
                            Title = "Burgas Hydrophore System"
                        },
                        new
                        {
                            Id = 5,
                            AbsoluteAddress = "Ulitsa Angel Kanchev 25, Ruse, Bulgaria",
                            IsCompleted = true,
                            Scheme = "https://www.handyman.net.au/wp-content/uploads/old_images/g-lawns-lawnirrigation-DIAGRAM.jpg",
                            Title = "Ruse Drainage Network"
                        },
                        new
                        {
                            Id = 6,
                            AbsoluteAddress = "Ulitsa Gotse Delchev 12, Blagoevgrad, Bulgaria",
                            IsCompleted = true,
                            Scheme = "https://www.handyman.net.au/wp-content/uploads/old_images/g-lawns-lawnirrigation-DIAGRAM.jpg",
                            Title = "Blagoevgrad Water Storage Facility"
                        },
                        new
                        {
                            Id = 7,
                            AbsoluteAddress = "Ulitsa Hristo Botev 15, Pleven, Bulgaria",
                            IsCompleted = false,
                            Scheme = "https://www.handyman.net.au/wp-content/uploads/old_images/g-lawns-lawnirrigation-DIAGRAM.jpg",
                            Title = "Pleven Irrigation System"
                        },
                        new
                        {
                            Id = 8,
                            AbsoluteAddress = "Ulitsa General Gurko 19, Stara Zagora, Bulgaria",
                            IsCompleted = false,
                            Scheme = "https://www.handyman.net.au/wp-content/uploads/old_images/g-lawns-lawnirrigation-DIAGRAM.jpg",
                            Title = "Stara Zagora Drainage Improvement"
                        },
                        new
                        {
                            Id = 9,
                            AbsoluteAddress = "Ulitsa Vasil Levski 22, Dobrich, Bulgaria",
                            IsCompleted = false,
                            Scheme = "https://www.handyman.net.au/wp-content/uploads/old_images/g-lawns-lawnirrigation-DIAGRAM.jpg",
                            Title = "Dobrich Hydrophore Installation"
                        },
                        new
                        {
                            Id = 10,
                            AbsoluteAddress = "Ulitsa Osvobozhdenie 8, Haskovo, Bulgaria",
                            IsCompleted = false,
                            Scheme = "https://www.handyman.net.au/wp-content/uploads/old_images/g-lawns-lawnirrigation-DIAGRAM.jpg",
                            Title = "Haskovo Water Distribution Network"
                        },
                        new
                        {
                            Id = 11,
                            AbsoluteAddress = "Ulitsa Simeon Veliki 18, Shumen, Bulgaria",
                            IsCompleted = false,
                            Scheme = "https://www.handyman.net.au/wp-content/uploads/old_images/g-lawns-lawnirrigation-DIAGRAM.jpg",
                            Title = "Shumen Pump Station"
                        },
                        new
                        {
                            Id = 12,
                            AbsoluteAddress = "Ulitsa Neofit Rilski 5, Kyustendil, Bulgaria",
                            IsCompleted = false,
                            Scheme = "https://www.handyman.net.au/wp-content/uploads/old_images/g-lawns-lawnirrigation-DIAGRAM.jpg",
                            Title = "Kyustendil Water Filtration Upgrade"
                        });
                });

            modelBuilder.Entity("Profais.Data.Models.ProfProjectRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ClientNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(250)
                        .HasColumnType("nvarchar(250)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("Id");

                    b.HasIndex("ClientId");

                    b.ToTable("ProjectsRequests");
                });

            modelBuilder.Entity("Profais.Data.Models.ProfSpecialistRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("ProfixId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("SpecialistRequests");
                });

            modelBuilder.Entity("Profais.Data.Models.ProfTask", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int>("HoursWorked")
                        .HasColumnType("int");

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("ProfProjectId")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("nvarchar(65)");

                    b.HasKey("Id");

                    b.HasIndex("ProfProjectId");

                    b.ToTable("Tasks");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Description = "Perform an initial inspection of the site for water filtration system installation.",
                            HoursWorked = 10,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 1,
                            Title = "Inspect site"
                        },
                        new
                        {
                            Id = 2,
                            Description = "Ensure all filtration components are available and functional.",
                            HoursWorked = 8,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 1,
                            Title = "Prepare filtration materials"
                        },
                        new
                        {
                            Id = 3,
                            Description = "Set up and install the filtration unit according to the design.",
                            HoursWorked = 15,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 1,
                            Title = "Install filtration unit"
                        },
                        new
                        {
                            Id = 4,
                            Description = "Run tests to ensure water quality meets standards.",
                            HoursWorked = 12,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 1,
                            Title = "Test water quality"
                        },
                        new
                        {
                            Id = 5,
                            Description = "Document the project and hand over the report to the client.",
                            HoursWorked = 5,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 1,
                            Title = "Prepare final report"
                        },
                        new
                        {
                            Id = 6,
                            Description = "Survey the area to plan the layout for irrigation pipes.",
                            HoursWorked = 8,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 2,
                            Title = "Survey irrigation layout"
                        },
                        new
                        {
                            Id = 7,
                            Description = "Install the main pipeline for water distribution.",
                            HoursWorked = 20,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 2,
                            Title = "Lay main pipeline"
                        },
                        new
                        {
                            Id = 8,
                            Description = "Install and configure the drip irrigation system.",
                            HoursWorked = 18,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 2,
                            Title = "Set up drip irrigation"
                        },
                        new
                        {
                            Id = 9,
                            Description = "Test the water flow through the irrigation system.",
                            HoursWorked = 10,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 2,
                            Title = "Test irrigation flow"
                        },
                        new
                        {
                            Id = 10,
                            Description = "Train the client on using and maintaining the irrigation system.",
                            HoursWorked = 5,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 2,
                            Title = "Client training"
                        },
                        new
                        {
                            Id = 11,
                            Description = "Survey the installation site for hydrophore system.",
                            HoursWorked = 6,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 3,
                            Title = "Site survey for installation"
                        },
                        new
                        {
                            Id = 12,
                            Description = "Install the main water tank for the system.",
                            HoursWorked = 14,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 3,
                            Title = "Install water tank"
                        },
                        new
                        {
                            Id = 13,
                            Description = "Set up the hydrophore pump for water pressurization.",
                            HoursWorked = 20,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 3,
                            Title = "Install hydrophore pump"
                        },
                        new
                        {
                            Id = 14,
                            Description = "Test the pressure levels of the hydrophore system.",
                            HoursWorked = 8,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 3,
                            Title = "Test system pressure"
                        },
                        new
                        {
                            Id = 15,
                            Description = "Perform a final check to ensure the system is running smoothly.",
                            HoursWorked = 6,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 3,
                            Title = "Final system check"
                        },
                        new
                        {
                            Id = 16,
                            Description = "Survey the land to place the water storage tank.",
                            HoursWorked = 5,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 4,
                            Title = "Survey location for tank"
                        },
                        new
                        {
                            Id = 17,
                            Description = "Set up and install the water storage tank.",
                            HoursWorked = 15,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 4,
                            Title = "Install water tank"
                        },
                        new
                        {
                            Id = 18,
                            Description = "Set up the pump for the water storage system.",
                            HoursWorked = 12,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 4,
                            Title = "Install pump system"
                        },
                        new
                        {
                            Id = 19,
                            Description = "Test the system to ensure it can hold the required volume.",
                            HoursWorked = 10,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 4,
                            Title = "Test system capacity"
                        },
                        new
                        {
                            Id = 20,
                            Description = "Inspect the entire water storage system for any issues.",
                            HoursWorked = 5,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 4,
                            Title = "Final inspection"
                        },
                        new
                        {
                            Id = 21,
                            Description = "Survey the layout for the water distribution system.",
                            HoursWorked = 7,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 5,
                            Title = "Survey for pipe layout"
                        },
                        new
                        {
                            Id = 22,
                            Description = "Install the main water line for distribution.",
                            HoursWorked = 18,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 5,
                            Title = "Install main water line"
                        },
                        new
                        {
                            Id = 23,
                            Description = "Install and configure water meters for distribution monitoring.",
                            HoursWorked = 10,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 5,
                            Title = "Set up water meters"
                        },
                        new
                        {
                            Id = 24,
                            Description = "Test the water flow and pressure across the system.",
                            HoursWorked = 8,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 5,
                            Title = "Test water flow"
                        },
                        new
                        {
                            Id = 25,
                            Description = "Hand over the completed system to the client.",
                            HoursWorked = 5,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 5,
                            Title = "Client handover"
                        },
                        new
                        {
                            Id = 26,
                            Description = "Survey the site for drainage system setup.",
                            HoursWorked = 6,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 6,
                            Title = "Inspect drainage area"
                        },
                        new
                        {
                            Id = 27,
                            Description = "Prepare the ground for drainage pipes.",
                            HoursWorked = 12,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 6,
                            Title = "Dig trenches for pipes"
                        },
                        new
                        {
                            Id = 28,
                            Description = "Place and secure the drainage pipes.",
                            HoursWorked = 20,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 6,
                            Title = "Install drainage pipes"
                        },
                        new
                        {
                            Id = 29,
                            Description = "Cover the installed pipes with soil.",
                            HoursWorked = 10,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 6,
                            Title = "Backfill trenches"
                        },
                        new
                        {
                            Id = 30,
                            Description = "Run water through the system to ensure functionality.",
                            HoursWorked = 8,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 6,
                            Title = "Test drainage system"
                        },
                        new
                        {
                            Id = 31,
                            Description = "Survey the site for pump installation.",
                            HoursWorked = 6,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 7,
                            Title = "Inspect pump installation site"
                        },
                        new
                        {
                            Id = 32,
                            Description = "Set up the pump unit for the irrigation system.",
                            HoursWorked = 8,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 7,
                            Title = "Install pump unit"
                        },
                        new
                        {
                            Id = 33,
                            Description = "Ensure that the pump operates at the correct pressure.",
                            HoursWorked = 6,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 7,
                            Title = "Test pump functionality"
                        },
                        new
                        {
                            Id = 34,
                            Description = "Connect the pump to the main irrigation pipes.",
                            HoursWorked = 10,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 7,
                            Title = "Connect pipes"
                        },
                        new
                        {
                            Id = 35,
                            Description = "Verify the entire pump installation system.",
                            HoursWorked = 5,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 7,
                            Title = "System check"
                        },
                        new
                        {
                            Id = 36,
                            Description = "Survey the area for installation of the water supply system.",
                            HoursWorked = 8,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 8,
                            Title = "Survey the water supply area"
                        },
                        new
                        {
                            Id = 37,
                            Description = "Install the primary pipes for the water supply system.",
                            HoursWorked = 20,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 8,
                            Title = "Lay pipes for water supply"
                        },
                        new
                        {
                            Id = 38,
                            Description = "Link the supply line to the water filtration system.",
                            HoursWorked = 12,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 8,
                            Title = "Connect supply to filtration"
                        },
                        new
                        {
                            Id = 39,
                            Description = "Install water meters for monitoring.",
                            HoursWorked = 8,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 8,
                            Title = "Install water meters"
                        },
                        new
                        {
                            Id = 40,
                            Description = "Ensure the water pressure meets standards.",
                            HoursWorked = 10,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 8,
                            Title = "Test water pressure"
                        },
                        new
                        {
                            Id = 41,
                            Description = "Inspect the site for desalination equipment.",
                            HoursWorked = 7,
                            IsCompleted = true,
                            IsDeleted = false,
                            ProfProjectId = 9,
                            Title = "Survey desalination site"
                        },
                        new
                        {
                            Id = 42,
                            Description = "Set up the desalination unit to process seawater.",
                            HoursWorked = 15,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 9,
                            Title = "Install desalination unit"
                        },
                        new
                        {
                            Id = 43,
                            Description = "Link the desalination unit to the main water supply.",
                            HoursWorked = 12,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 9,
                            Title = "Connect desalination to water supply"
                        },
                        new
                        {
                            Id = 44,
                            Description = "Check water quality after desalination process.",
                            HoursWorked = 10,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 9,
                            Title = "Test water quality post-desalination"
                        },
                        new
                        {
                            Id = 45,
                            Description = "Run the desalination system in full operation for a trial period.",
                            HoursWorked = 8,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 9,
                            Title = "System commissioning"
                        },
                        new
                        {
                            Id = 46,
                            Description = "Survey the site for installation of the treatment plant.",
                            HoursWorked = 6,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 10,
                            Title = "Survey treatment plant site"
                        },
                        new
                        {
                            Id = 47,
                            Description = "Set up the primary water treatment system.",
                            HoursWorked = 20,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 10,
                            Title = "Install treatment system"
                        },
                        new
                        {
                            Id = 48,
                            Description = "Test the operation of the treatment system.",
                            HoursWorked = 12,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 10,
                            Title = "Test system operation"
                        },
                        new
                        {
                            Id = 49,
                            Description = "Test the effectiveness of the filtration system.",
                            HoursWorked = 8,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 10,
                            Title = "Check filtration quality"
                        },
                        new
                        {
                            Id = 50,
                            Description = "Complete the installation and setup of the treatment plant.",
                            HoursWorked = 10,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 10,
                            Title = "Finalize system setup"
                        },
                        new
                        {
                            Id = 51,
                            Description = "Inspect the site for rainwater harvesting system setup.",
                            HoursWorked = 8,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 11,
                            Title = "Survey site for harvesting system"
                        },
                        new
                        {
                            Id = 52,
                            Description = "Set up the rainwater collection and filtration system.",
                            HoursWorked = 18,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 11,
                            Title = "Install harvesting system"
                        },
                        new
                        {
                            Id = 53,
                            Description = "Link the system to the main water storage tank.",
                            HoursWorked = 12,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 11,
                            Title = "Connect to storage tank"
                        },
                        new
                        {
                            Id = 54,
                            Description = "Test the entire system for proper operation.",
                            HoursWorked = 10,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 11,
                            Title = "Test system functionality"
                        },
                        new
                        {
                            Id = 55,
                            Description = "Train the client on operating and maintaining the system.",
                            HoursWorked = 6,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 11,
                            Title = "Client handover"
                        },
                        new
                        {
                            Id = 56,
                            Description = "Survey the industrial site for water supply needs.",
                            HoursWorked = 8,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 12,
                            Title = "Survey industrial site"
                        },
                        new
                        {
                            Id = 57,
                            Description = "Install pipes and pumps for the industrial water system.",
                            HoursWorked = 20,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 12,
                            Title = "Install water supply system"
                        },
                        new
                        {
                            Id = 58,
                            Description = "Test the system for water pressure and flow.",
                            HoursWorked = 15,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 12,
                            Title = "Test water flow"
                        },
                        new
                        {
                            Id = 59,
                            Description = "Link the water supply system to the filtration unit.",
                            HoursWorked = 10,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 12,
                            Title = "Connect to filtration"
                        },
                        new
                        {
                            Id = 60,
                            Description = "Perform a final check on the system functionality.",
                            HoursWorked = 7,
                            IsCompleted = false,
                            IsDeleted = false,
                            ProfProjectId = 12,
                            Title = "System verification"
                        });
                });

            modelBuilder.Entity("Profais.Data.Models.ProfUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("Profais.Data.Models.ProfUserPenalty", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("PenaltyId")
                        .HasColumnType("int");

                    b.HasKey("UserId", "PenaltyId");

                    b.HasIndex("PenaltyId");

                    b.ToTable("UsersPenalties");
                });

            modelBuilder.Entity("Profais.Data.Models.ProfUserTask", b =>
                {
                    b.Property<string>("WorkerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("WorkerId", "TaskId", "VehicleId");

                    b.HasIndex("TaskId");

                    b.HasIndex("VehicleId");

                    b.ToTable("UsersTasks");
                });

            modelBuilder.Entity("Profais.Data.Models.ProfWorkerRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("ProfixId")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("WorkerRequests");
                });

            modelBuilder.Entity("Profais.Data.Models.TaskMaterial", b =>
                {
                    b.Property<int>("MaterialId")
                        .HasColumnType("int");

                    b.Property<int>("TaskId")
                        .HasColumnType("int");

                    b.HasKey("MaterialId", "TaskId");

                    b.HasIndex("TaskId");

                    b.ToTable("TasksMaterials");

                    b.HasData(
                        new
                        {
                            MaterialId = 1,
                            TaskId = 1
                        },
                        new
                        {
                            MaterialId = 2,
                            TaskId = 1
                        },
                        new
                        {
                            MaterialId = 4,
                            TaskId = 2
                        },
                        new
                        {
                            MaterialId = 5,
                            TaskId = 2
                        },
                        new
                        {
                            MaterialId = 6,
                            TaskId = 3
                        },
                        new
                        {
                            MaterialId = 7,
                            TaskId = 3
                        },
                        new
                        {
                            MaterialId = 8,
                            TaskId = 4
                        },
                        new
                        {
                            MaterialId = 9,
                            TaskId = 4
                        },
                        new
                        {
                            MaterialId = 10,
                            TaskId = 5
                        },
                        new
                        {
                            MaterialId = 11,
                            TaskId = 5
                        },
                        new
                        {
                            MaterialId = 12,
                            TaskId = 6
                        },
                        new
                        {
                            MaterialId = 13,
                            TaskId = 6
                        },
                        new
                        {
                            MaterialId = 14,
                            TaskId = 7
                        },
                        new
                        {
                            MaterialId = 15,
                            TaskId = 7
                        },
                        new
                        {
                            MaterialId = 16,
                            TaskId = 8
                        },
                        new
                        {
                            MaterialId = 17,
                            TaskId = 8
                        },
                        new
                        {
                            MaterialId = 18,
                            TaskId = 9
                        },
                        new
                        {
                            MaterialId = 19,
                            TaskId = 9
                        },
                        new
                        {
                            MaterialId = 20,
                            TaskId = 10
                        },
                        new
                        {
                            MaterialId = 21,
                            TaskId = 10
                        },
                        new
                        {
                            MaterialId = 22,
                            TaskId = 11
                        },
                        new
                        {
                            MaterialId = 23,
                            TaskId = 11
                        },
                        new
                        {
                            MaterialId = 24,
                            TaskId = 12
                        },
                        new
                        {
                            MaterialId = 25,
                            TaskId = 12
                        },
                        new
                        {
                            MaterialId = 26,
                            TaskId = 13
                        },
                        new
                        {
                            MaterialId = 27,
                            TaskId = 13
                        },
                        new
                        {
                            MaterialId = 28,
                            TaskId = 14
                        },
                        new
                        {
                            MaterialId = 29,
                            TaskId = 14
                        },
                        new
                        {
                            MaterialId = 30,
                            TaskId = 15
                        },
                        new
                        {
                            MaterialId = 31,
                            TaskId = 15
                        },
                        new
                        {
                            MaterialId = 32,
                            TaskId = 16
                        },
                        new
                        {
                            MaterialId = 33,
                            TaskId = 16
                        },
                        new
                        {
                            MaterialId = 24,
                            TaskId = 17
                        },
                        new
                        {
                            MaterialId = 25,
                            TaskId = 17
                        },
                        new
                        {
                            MaterialId = 26,
                            TaskId = 18
                        },
                        new
                        {
                            MaterialId = 27,
                            TaskId = 18
                        },
                        new
                        {
                            MaterialId = 28,
                            TaskId = 19
                        },
                        new
                        {
                            MaterialId = 34,
                            TaskId = 19
                        },
                        new
                        {
                            MaterialId = 35,
                            TaskId = 20
                        },
                        new
                        {
                            MaterialId = 36,
                            TaskId = 20
                        },
                        new
                        {
                            MaterialId = 37,
                            TaskId = 21
                        },
                        new
                        {
                            MaterialId = 38,
                            TaskId = 21
                        },
                        new
                        {
                            MaterialId = 39,
                            TaskId = 22
                        },
                        new
                        {
                            MaterialId = 40,
                            TaskId = 22
                        },
                        new
                        {
                            MaterialId = 41,
                            TaskId = 23
                        },
                        new
                        {
                            MaterialId = 42,
                            TaskId = 23
                        },
                        new
                        {
                            MaterialId = 43,
                            TaskId = 24
                        },
                        new
                        {
                            MaterialId = 44,
                            TaskId = 24
                        },
                        new
                        {
                            MaterialId = 45,
                            TaskId = 25
                        },
                        new
                        {
                            MaterialId = 46,
                            TaskId = 25
                        },
                        new
                        {
                            MaterialId = 47,
                            TaskId = 26
                        },
                        new
                        {
                            MaterialId = 48,
                            TaskId = 26
                        },
                        new
                        {
                            MaterialId = 49,
                            TaskId = 27
                        },
                        new
                        {
                            MaterialId = 50,
                            TaskId = 27
                        },
                        new
                        {
                            MaterialId = 51,
                            TaskId = 28
                        },
                        new
                        {
                            MaterialId = 52,
                            TaskId = 28
                        },
                        new
                        {
                            MaterialId = 53,
                            TaskId = 29
                        },
                        new
                        {
                            MaterialId = 54,
                            TaskId = 29
                        },
                        new
                        {
                            MaterialId = 55,
                            TaskId = 30
                        },
                        new
                        {
                            MaterialId = 56,
                            TaskId = 30
                        },
                        new
                        {
                            MaterialId = 37,
                            TaskId = 31
                        },
                        new
                        {
                            MaterialId = 38,
                            TaskId = 31
                        },
                        new
                        {
                            MaterialId = 39,
                            TaskId = 32
                        },
                        new
                        {
                            MaterialId = 40,
                            TaskId = 32
                        },
                        new
                        {
                            MaterialId = 41,
                            TaskId = 33
                        },
                        new
                        {
                            MaterialId = 42,
                            TaskId = 33
                        },
                        new
                        {
                            MaterialId = 43,
                            TaskId = 34
                        },
                        new
                        {
                            MaterialId = 44,
                            TaskId = 34
                        },
                        new
                        {
                            MaterialId = 45,
                            TaskId = 35
                        },
                        new
                        {
                            MaterialId = 46,
                            TaskId = 35
                        },
                        new
                        {
                            MaterialId = 47,
                            TaskId = 36
                        },
                        new
                        {
                            MaterialId = 48,
                            TaskId = 36
                        },
                        new
                        {
                            MaterialId = 39,
                            TaskId = 37
                        },
                        new
                        {
                            MaterialId = 40,
                            TaskId = 37
                        },
                        new
                        {
                            MaterialId = 41,
                            TaskId = 38
                        },
                        new
                        {
                            MaterialId = 42,
                            TaskId = 38
                        },
                        new
                        {
                            MaterialId = 43,
                            TaskId = 39
                        },
                        new
                        {
                            MaterialId = 44,
                            TaskId = 39
                        },
                        new
                        {
                            MaterialId = 45,
                            TaskId = 40
                        },
                        new
                        {
                            MaterialId = 46,
                            TaskId = 40
                        },
                        new
                        {
                            MaterialId = 47,
                            TaskId = 41
                        },
                        new
                        {
                            MaterialId = 48,
                            TaskId = 41
                        },
                        new
                        {
                            MaterialId = 49,
                            TaskId = 42
                        },
                        new
                        {
                            MaterialId = 50,
                            TaskId = 42
                        },
                        new
                        {
                            MaterialId = 51,
                            TaskId = 43
                        },
                        new
                        {
                            MaterialId = 52,
                            TaskId = 43
                        },
                        new
                        {
                            MaterialId = 53,
                            TaskId = 44
                        },
                        new
                        {
                            MaterialId = 54,
                            TaskId = 44
                        },
                        new
                        {
                            MaterialId = 55,
                            TaskId = 45
                        },
                        new
                        {
                            MaterialId = 56,
                            TaskId = 45
                        },
                        new
                        {
                            MaterialId = 47,
                            TaskId = 46
                        },
                        new
                        {
                            MaterialId = 48,
                            TaskId = 46
                        },
                        new
                        {
                            MaterialId = 24,
                            TaskId = 47
                        },
                        new
                        {
                            MaterialId = 25,
                            TaskId = 47
                        },
                        new
                        {
                            MaterialId = 49,
                            TaskId = 48
                        },
                        new
                        {
                            MaterialId = 50,
                            TaskId = 48
                        },
                        new
                        {
                            MaterialId = 51,
                            TaskId = 49
                        },
                        new
                        {
                            MaterialId = 52,
                            TaskId = 49
                        },
                        new
                        {
                            MaterialId = 53,
                            TaskId = 50
                        },
                        new
                        {
                            MaterialId = 54,
                            TaskId = 50
                        },
                        new
                        {
                            MaterialId = 47,
                            TaskId = 51
                        },
                        new
                        {
                            MaterialId = 48,
                            TaskId = 51
                        },
                        new
                        {
                            MaterialId = 24,
                            TaskId = 52
                        },
                        new
                        {
                            MaterialId = 25,
                            TaskId = 52
                        },
                        new
                        {
                            MaterialId = 49,
                            TaskId = 53
                        },
                        new
                        {
                            MaterialId = 50,
                            TaskId = 53
                        },
                        new
                        {
                            MaterialId = 51,
                            TaskId = 54
                        },
                        new
                        {
                            MaterialId = 52,
                            TaskId = 54
                        },
                        new
                        {
                            MaterialId = 53,
                            TaskId = 55
                        },
                        new
                        {
                            MaterialId = 54,
                            TaskId = 55
                        },
                        new
                        {
                            MaterialId = 47,
                            TaskId = 56
                        },
                        new
                        {
                            MaterialId = 48,
                            TaskId = 56
                        },
                        new
                        {
                            MaterialId = 49,
                            TaskId = 57
                        },
                        new
                        {
                            MaterialId = 50,
                            TaskId = 57
                        },
                        new
                        {
                            MaterialId = 42,
                            TaskId = 58
                        },
                        new
                        {
                            MaterialId = 52,
                            TaskId = 58
                        },
                        new
                        {
                            MaterialId = 51,
                            TaskId = 59
                        },
                        new
                        {
                            MaterialId = 52,
                            TaskId = 59
                        },
                        new
                        {
                            MaterialId = 53,
                            TaskId = 60
                        },
                        new
                        {
                            MaterialId = 54,
                            TaskId = 60
                        });
                });

            modelBuilder.Entity("Profais.Data.Models.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<int>("Type")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vehicles");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 5,
                            Name = "Toyota Corolla",
                            Type = 0
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 4,
                            Name = "Honda Civic",
                            Type = 0
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 4,
                            Name = "Ford Focus",
                            Type = 0
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 2,
                            Name = "Mercedes-Benz Actros",
                            Type = 1
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 3,
                            Name = "Volvo FH16",
                            Type = 1
                        },
                        new
                        {
                            Id = 6,
                            Capacity = 2,
                            Name = "MAN TGX",
                            Type = 1
                        },
                        new
                        {
                            Id = 7,
                            Capacity = 1,
                            Name = "Hyster H50XT",
                            Type = 2
                        },
                        new
                        {
                            Id = 8,
                            Capacity = 1,
                            Name = "Toyota 8FGCU25",
                            Type = 2
                        },
                        new
                        {
                            Id = 9,
                            Capacity = 1,
                            Name = "Caterpillar GP25N",
                            Type = 2
                        },
                        new
                        {
                            Id = 10,
                            Capacity = 3,
                            Name = "CAT 745C",
                            Type = 3
                        },
                        new
                        {
                            Id = 11,
                            Capacity = 3,
                            Name = "Komatsu HD785",
                            Type = 3
                        },
                        new
                        {
                            Id = 12,
                            Capacity = 2,
                            Name = "Volvo A40G",
                            Type = 3
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<string>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("Profais.Data.Models.ProfUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("Profais.Data.Models.ProfUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole<string>", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Profais.Data.Models.ProfUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("Profais.Data.Models.ProfUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Profais.Data.Models.ProfProject", b =>
                {
                    b.HasOne("Profais.Data.Models.ProfProjectRequest", "ProfProjectRequest")
                        .WithMany()
                        .HasForeignKey("ProfProjectRequestId");

                    b.Navigation("ProfProjectRequest");
                });

            modelBuilder.Entity("Profais.Data.Models.ProfProjectRequest", b =>
                {
                    b.HasOne("Profais.Data.Models.ProfUser", "Client")
                        .WithMany("ProjectRequests")
                        .HasForeignKey("ClientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Client");
                });

            modelBuilder.Entity("Profais.Data.Models.ProfTask", b =>
                {
                    b.HasOne("Profais.Data.Models.ProfProject", "ProfProject")
                        .WithMany("Tasks")
                        .HasForeignKey("ProfProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ProfProject");
                });

            modelBuilder.Entity("Profais.Data.Models.ProfUserPenalty", b =>
                {
                    b.HasOne("Profais.Data.Models.Penalty", "Penalty")
                        .WithMany("UserPenalties")
                        .HasForeignKey("PenaltyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Profais.Data.Models.ProfUser", "User")
                        .WithMany("UserPenalties")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Penalty");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Profais.Data.Models.ProfUserTask", b =>
                {
                    b.HasOne("Profais.Data.Models.ProfTask", "Task")
                        .WithMany("UserTasks")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Profais.Data.Models.Vehicle", "Vehicle")
                        .WithMany("UserTasks")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Profais.Data.Models.ProfUser", "Worker")
                        .WithMany("UserTasks")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Task");

                    b.Navigation("Vehicle");

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("Profais.Data.Models.TaskMaterial", b =>
                {
                    b.HasOne("Profais.Data.Models.Material", "Material")
                        .WithMany("TaskMaterials")
                        .HasForeignKey("MaterialId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Profais.Data.Models.ProfTask", "Task")
                        .WithMany("TaskMaterials")
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Material");

                    b.Navigation("Task");
                });

            modelBuilder.Entity("Profais.Data.Models.Material", b =>
                {
                    b.Navigation("TaskMaterials");
                });

            modelBuilder.Entity("Profais.Data.Models.Penalty", b =>
                {
                    b.Navigation("UserPenalties");
                });

            modelBuilder.Entity("Profais.Data.Models.ProfProject", b =>
                {
                    b.Navigation("Tasks");
                });

            modelBuilder.Entity("Profais.Data.Models.ProfTask", b =>
                {
                    b.Navigation("TaskMaterials");

                    b.Navigation("UserTasks");
                });

            modelBuilder.Entity("Profais.Data.Models.ProfUser", b =>
                {
                    b.Navigation("ProjectRequests");

                    b.Navigation("UserPenalties");

                    b.Navigation("UserTasks");
                });

            modelBuilder.Entity("Profais.Data.Models.Vehicle", b =>
                {
                    b.Navigation("UserTasks");
                });
#pragma warning restore 612, 618
        }
    }
}
